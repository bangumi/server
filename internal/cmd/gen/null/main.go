// SPDX-License-Identifier: AGPL-3.0-only
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published
// by the Free Software Foundation, version 3.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
// See the GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program. If not, see <https://www.gnu.org/licenses/>

package main

import (
	_ "embed"
	"fmt"
	"go/format"
	"os"
	"strings"
)

//go:embed template/template.go
var tpl string

const generatedHeader = "// Code generated by ./internal/cmd/gen/null/main.go. DO NOT EDIT.\n\n"

func main() {
	var types = []string{
		"bool", "string", "float32", "float64",
		"uint8", "uint16", "uint32", "uint64", "uint",
		"int8", "int16", "int32", "int64", "int",
	}

	for _, s := range types {
		var code = tpl
		code = strings.ReplaceAll(code, "GenericType", s)
		code = strings.ReplaceAll(code, "Type", destType(s))

		outPath := fmt.Sprintf("./internal/pkg/null/%s.gen.go", s)
		formatted, err := format.Source([]byte(generatedHeader + code))
		if err != nil {
			panic(err)
		}

		err = os.WriteFile(outPath, formatted, 0600) //nolint:gomnd
		if err != nil {
			panic(err)
		}
	}
}

func destType(s string) string {
	return strings.ToUpper(s[:1]) + strings.ToLower(s[1:])
}
