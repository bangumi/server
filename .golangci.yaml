version: "2"
run:
  modules-download-mode: readonly
  issues-exit-code: 1
  tests: true
  allow-parallel-runners: true
output:
  formats:
    text:
      path: stdout
linters:
  default: none
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - containedctx
    - copyloopvar
    - depguard
    - dogsled
    - durationcheck
    - errcheck
    - errchkjson
    - errname
    - errorlint
    - exhaustive
    - forbidigo
    - forcetypeassert
    - funlen
    - gocheckcompilerdirectives
    - gochecknoglobals
    - gochecknoinits
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - govet
    - grouper
    - importas
    - ineffassign
    - interfacebloat
    - lll
    - loggercheck
    - maintidx
    - makezero
    - misspell
    - mnd
    - nakedret
    - nestif
    - nilnil
    - noctx
    - paralleltest
    - predeclared
    - promlinter
    - reassign
    - revive
    - staticcheck
    - tagliatelle
    - testableexamples
    - testpackage
    - thelper
    - tparallel
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - whitespace
  settings:
    depguard:
      rules:
        main:
          files:
            - $all
            - "!$test"
            - "!**/internal/pkg/test/**.go"
          deny:
            - pkg: github.com/sirupsen/logrus
              desc: use "app/pkg/logger"
            - pkg: github.com/golang/mock
              desc: use "github.com/stretchr/testify/mock" and "github.com/vektra/mockery"
            - pkg: github.com/stretchr/testify
              desc: test assert package not allowed
        test:
          files:
            - $test
            - "**/internal/pkg/test/**.go"
          deny:
            - pkg: github.com/golang/mock
              desc: use "github.com/stretchr/testify/mock" and "github.com/vektra/mockery"
    errcheck:
      check-type-assertions: false
      check-blank: false
      exclude-functions:
        - (*github.com/valyala/bytebufferpool.ByteBuffer).Write
        - (*github.com/valyala/bytebufferpool.ByteBuffer).WriteByte
        - (*github.com/valyala/bytebufferpool.ByteBuffer).WriteString
    errorlint:
      errorf: true
      asserts: true
      comparison: true
    exhaustive:
      default-signifies-exhaustive: true
    forbidigo:
      forbid:
        - pattern: ^print.*$
        - pattern: ^fmt\.Println$
        - pattern: ^fmt\.Print$
    funlen:
      lines: 60
      statements: 40
    gocyclo:
      min-complexity: 15
    godot:
      scope: declarations
      capital: false
    gosec:
      excludes:
        - G115
    govet:
      disable:
        - fieldalignment
      enable-all: true
    importas:
      alias:
        - pkg: log
          alias: stdLog
        - pkg: gorm.io/gorm/logger
          alias: gormLogger
        - pkg: github.com/go-playground/universal-translator
          alias: ut
        - pkg: github.com/go-playground/validator/v10/translations/zh
          alias: zhTranslations
      no-unaliased: false
      no-extra-aliases: false
    lll:
      line-length: 120
      tab-width: 2
    misspell:
      locale: US
    mnd:
      checks:
        - argument
        - case
        - operation
        - return
        - assign
      ignored-numbers:
        - "1"
        - "2"
        - "3"
        - "10"
        - "100"
        - "1000"
        - "10000"
      ignored-functions:
        - strconv\..*
        - time\..*
        - make
        - math\..*
        - strings\..*
    nlreturn:
      block-size: 3
    revive:
      rules:
        - name: unused-parameter
          disabled: true
    staticcheck:
      checks:
        - all
    tagliatelle:
      case:
        rules:
          json: snake
          yaml: snake
        use-field-name: false
    testpackage:
      skip-regexp: (export|internal)_test\.go
  exclusions:
    generated: lax
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    rules:
      - linters:
          - gochecknoglobals
          - gochecknoinits
          - wrapcheck
        path: cmd/.*
      - linters:
          - funlen
          - gochecknoglobals
          - gocritic
          - godot
          - nosnakecase
        path: .*_test\.go
      - linters:
          - gochecknoglobals
        source: var .* = pool.New
      - linters:
          - gochecknoglobals
        source: var Module = fx\.Module\(
      - linters:
          - gochecknoglobals
        source: var .* = reflect\.TypeOf
      - linters:
          - gochecknoglobals
        source: var .* sync\.Once
      - linters:
          - err113
          - errorlint
        source: if err == redis.Nil {
      - linters:
          - paralleltest
        text: Range statement for test \S+ does not use range value in test Run
      - linters:
          - nilerr
        source: return false, nil
    paths:
      - third_party$
      - builtin$
      - examples$

issues:
  new: false
  fix: false

formatters:
  enable:
    - gci
    - gofmt
  settings:
    gci:
      sections:
        - standard
        - default
        - prefix(github.com/bangumi/server)
    gofmt:
      simplify: true
      rewrite-rules:
        - pattern: interface{}
          replacement: any
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$
