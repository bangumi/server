name: release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  github:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - run: npm ci

      - run: node scripts/changelog.js > changelog.md

      - run: echo "TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Upload GitHub Release
        run: gh release create "$TAG" --title "$TAG" -F changelog.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker-chii:
    runs-on: ubuntu-latest
    env:
      IMAGE: "bangumi/chii"

    steps:
      - uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: "~1.17.8"

      - run: echo "TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Install Task
        uses: arduino/setup-task@v1

      - run: task build

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./
          push: true
          file: etc/Dockerfile
          tags: ghcr.io/${{ env.IMAGE }}:latest,ghcr.io/${{ env.IMAGE }}:${{env.TAG}}

  docker-cmd-archive:
    runs-on: ubuntu-latest

    env:
      IMAGE: "bangumi/chii-cmd-archive"

    steps:
      - uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: "~1.17.8"

      - run: echo "TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Install Task
        uses: arduino/setup-task@v1

      - run: task build-archive

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          context: ./
          file: etc/archive.Dockerfile
          tags: ghcr.io/${{ env.IMAGE }}:latest,ghcr.io/${{ env.IMAGE }}:${{env.TAG}}

  openapi-v0:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - run: npm ci

      - uses: actions/checkout@v3
        with:
          repository: "bangumi/api"
          path: api

      - run: node ./openapi/bundle.js ./openapi/v0.yaml ./api/open-api/v0.yaml

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          path: api
          token: ${{ secrets.PAT }}
          title: Update Openapi Specification for v0
          push-to-fork: Trim21-bot/api
          branch: "update-upstream"
          author: "Trim21-bot <trim21-bot@users.noreply.github.com>"

  openapi-private:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - run: npm ci

      - uses: actions/checkout@v3
        with:
          repository: "bangumi/dev-docs"
          path: dev-docs

      - run: node ./openapi/bundle.js ./openapi/private.yaml ./dev-docs/api.yaml

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          path: dev-docs
          token: ${{ secrets.PAT }}
          title: Update Openapi Specification for private api
          push-to-fork: Trim21-bot/dev-docs
          branch: "update-upstream"
          author: "Trim21-bot <trim21-bot@users.noreply.github.com>"
