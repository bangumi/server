version: "3"

vars:
  BIN: "{{.ROOT_DIR}}/.bin"

tasks:
  all:
    cmds:
      - task: session-manager
      - task: session-repo
      - task: cache
      - task: Auth
      - task: CharacterRepo
      - task: IndexRepo
      - task: RevisionRepo
      - task: SubjectRepo
      - task: UserRepo
      - task: EpisodeRepo
      - task: PersonRepo
      - task: PersonService
      - task: CollectionRepo
      - task: TimeLineService
      - task: SearchClient
      - task: PrivateMessageRepo
      - task: NotificationRepo

  base-mock:
    deps:
      - "install:mockery"
    cmds:
      - './.bin/mockery{{exeExt}} --dir {{.SRC_DIR}} --filename "{{.MOCK_STRUCT|default .INTERFACE}}.go" --name "{{.INTERFACE | default "Manager"}}" --structname {{.MOCK_STRUCT|default .INTERFACE}} --output ./internal/mocks --with-expecter'

  install:mockery:
    desc: Installs mockery
    vars:
      MOCKERY_VERSION: v2.43.0
    env:
      GOBIN: "{{.BIN}}"
    status:
      - go version -m {{.BIN}}/mockery{{exeExt}} | grep "github.com/vektra/mockery" | grep "version={{.MOCKERY_VERSION}}"
    cmds:
      - go install github.com/vektra/mockery/v2@{{.MOCKERY_VERSION}}

  session-repo:
    sources:
      - ./web/session/repo.go
      - ./internal/pkg/tools/go.mod
    generates:
      - internal/mocks/SessionRepo.go
    cmds:
      - task: base-mock
        vars:
          SRC_DIR: ./web/session
          INTERFACE: Repo
          MOCK_STRUCT: "SessionRepo"

  cache:
    sources:
      - ./internal/pkg/cache/redis.go
      - ./internal/pkg/tools/go.mod
    generates:
      - internal/mocks/RedisCache.go
    cmds:
      - task: base-mock
        vars:
          SRC_DIR: ./internal/pkg/cache
          INTERFACE: "RedisCache"
          MOCK_STRUCT: RedisCache

  session-manager:
    sources:
      - ./web/session/manager.go
      - ./internal/pkg/tools/go.mod
    generates:
      - internal/mocks/SessionManager.go
    cmds:
      - task: base-mock
        vars:
          MOCK_STRUCT: SessionManager
          SRC_DIR: ./web/session

  "Auth":
    sources:
      - internal/auth/domain.go
      - ./internal/pkg/tools/go.mod
    generates:
      - internal/mocks/AuthRepo.go
      - internal/mocks/AuthService.go
    cmds:
      - task: base-mock
        vars:
          SRC_DIR: ./internal/auth
          INTERFACE: "Repo"
          MOCK_STRUCT: "AuthRepo"
      - task: base-mock
        vars:
          SRC_DIR: ./internal/auth
          MOCK_STRUCT: "AuthService"
          INTERFACE: Service

  "CharacterRepo":
    sources:
      - ./internal/character/domain/.go
      - ./internal/pkg/tools/go.mod
    generates:
      - internal/mocks/CharacterRepo.go
    cmds:
      - task: base-mock
        vars:
          SRC_DIR: ./internal/character
          MOCK_STRUCT: "CharacterRepo"
          INTERFACE: Repo

  "IndexRepo":
    sources:
      - internal/index/domain.go
      - ./internal/pkg/tools/go.mod
    generates:
      - internal/mocks/IndexRepo.go
    cmds:
      - task: base-mock
        vars:
          SRC_DIR: ./internal/index
          MOCK_STRUCT: "IndexRepo"
          INTERFACE: Repo

  "RevisionRepo":
    sources:
      - internal/revision/domain.go
      - ./internal/pkg/tools/go.mod
    generates:
      - internal/mocks/RevisionRepo.go
    cmds:
      - task: base-mock
        vars:
          SRC_DIR: ./internal/revision
          MOCK_STRUCT: "RevisionRepo"
          INTERFACE: Repo

  "SubjectRepo":
    sources:
      - internal/subject/domain.go
      - ./internal/pkg/tools/go.mod
    generates:
      - internal/mocks/SubjectRepo.go
      - internal/mocks/SubjectCachedRepo.go
    cmds:
      - task: base-mock
        vars:
          SRC_DIR: ./internal/subject
          INTERFACE: "Repo"
          MOCK_STRUCT: SubjectRepo

      - task: base-mock
        vars:
          SRC_DIR: ./internal/subject
          INTERFACE: "CachedRepo"
          MOCK_STRUCT: SubjectCachedRepo

  "UserRepo":
    sources:
      - internal/user/domain.go
      - ./internal/pkg/tools/go.mod
    generates:
      - internal/mocks/UserRepo.go
    cmds:
      - task: base-mock
        vars:
          SRC_DIR: ./internal/user
          MOCK_STRUCT: "UserRepo"
          INTERFACE: Repo

  "EpisodeRepo":
    sources:
      - internal/episode/domain.go
      - ./internal/pkg/tools/go.mod
    generates:
      - internal/mocks/EpisodeRepo.go
    cmds:
      - task: base-mock
        vars:
          SRC_DIR: ./internal/episode
          MOCK_STRUCT: "EpisodeRepo"
          INTERFACE: Repo

  "PersonRepo":
    sources:
      - internal/person/domain.go
      - ./internal/pkg/tools/go.mod
    generates:
      - internal/mocks/PersonRepo.go
    cmds:
      - task: base-mock
        vars:
          SRC_DIR: ./internal/person
          MOCK_STRUCT: "PersonRepo"
          INTERFACE: Repo

  "PersonService":
    sources:
      - internal/person/domain.go
      - ./internal/pkg/tools/go.mod
    generates:
      - internal/mocks/PersonService.go
    cmds:
      - task: base-mock
        vars:
          SRC_DIR: ./internal/person
          MOCK_STRUCT: "PersonService"
          INTERFACE: Repo

  GroupRepo:
    sources:
      - internal/group/domain.go
      - ./internal/pkg/tools/go.mod
    generates:
      - internal/mocks/GroupRepo.go
    cmds:
      - task: base-mock
        vars:
          SRC_DIR: ./internal/group
          MOCK_STRUCT: GroupRepo
          INTERFACE: Repo

  CollectionRepo:
    sources:
      - internal/collections/domain.go
      - ./internal/pkg/tools/go.mod
    generates:
      - internal/mocks/CollectionRepo.go
    cmds:
      - task: base-mock
        vars:
          SRC_DIR: ./internal/collections
          MOCK_STRUCT: CollectionRepo
          INTERFACE: Repo

  TimeLineService:
    sources:
      - internal/timeline/domain.go
      - ./internal/pkg/tools/go.mod
    generates:
      - internal/mocks/TimeLineService.go
    cmds:
      - task: base-mock
        vars:
          SRC_DIR: ./internal/timeline
          INTERFACE: Service
          MOCK_STRUCT: TimeLineService

  SearchClient:
    sources:
      - internal/search/client.go
      - ./internal/pkg/tools/go.mod
    generates:
      - internal/mocks/SearchClient.go
    cmds:
      - task: base-mock
        vars:
          SRC_DIR: ./internal/search
          INTERFACE: Client
          MOCK_STRUCT: SearchClient

  PrivateMessageRepo:
    sources:
      - internal/pm/domain.go
      - ./internal/pkg/tools/go.mod
    generates:
      - internal/mocks/PrivateMessageRepo.go
    cmds:
      - task: base-mock
        vars:
          SRC_DIR: ./internal/pm
          INTERFACE: Repo
          MOCK_STRUCT: PrivateMessageRepo

  NotificationRepo:
    sources:
      - internal/notification/domain.go
      - ./internal/pkg/tools/go.mod
    generates:
      - internal/mocks/NotificationRepo.go
    cmds:
      - task: base-mock
        vars:
          SRC_DIR: ./internal/notification
          INTERFACE: Repo
          MOCK_STRUCT: NotificationRepo
