openapi: 3.0.2
info:
  title: "Bangumi Private API"
  version: ""
  description: "`next.bgm.tv` 域名不支持跨域"

# 构建脚本会添加 servers
#servers:
#  - url: https://next.bgm.tv
#    description: Production server
#  - url: https://dev.bgm38.com/
#    description: 开发用服务器

tags:
  - name: Auth

paths:
  "/p/login":
    post:
      tags:
        - Auth
      summary: 登录
      operationId: login
      description: |
        `h-captcha-response` 是 [hCaptcha 的验证码](https://docs.hcaptcha.com/#add-the-hcaptcha-widget-to-your-webpage)

        site key 是 `4874acee-9c6e-4e47-99ad-e2ea1606961f`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - h-captcha-response
              properties:
                email:
                  type: string
                password:
                  type: string
                h-captcha-response:
                  type: string
      responses:
        "200":
          description: "账号密码正确，设置 Cookies"
          headers:
            Set-Cookie:
              description: 设置 cookies session
              schema:
                type: string
                example: sessionID=abcde12345; Path=/; HttpOnly
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User"

        "400":
          description: 请求错误或者验证码错误
          content:
            application/json:
              example:
                "title": "Bad Request"
                "details":
                  - "Email为必填字段"
                  - "Password为必填字段"
                  - "HCaptchaResponse为必填字段"
                "description": "can't validate request body"
              schema:
                title: ErrorDetail
                required:
                  - title
                  - description
                  - detail
                type: object
                properties:
                  title:
                    title: Title
                    type: string
                  description:
                    title: Description
                    type: string
                  detail:
                    title: Detail
                    type: array
                    items:
                      type: string

        "401":
          description: 账号或密码错误
          content:
            application/json:
              schema:
                title: ErrorDetail
                required:
                  - title
                  - description
                  - detail
                type: object
                properties:
                  title:
                    title: Title
                    type: string
                  description:
                    title: Description
                    type: string
                  detail:
                    title: Detail
                    type: object
                    properties:
                      "remain":
                        type: integer
                        description: 剩余可用登录次数。

        "415":
          description: "content-type 不是 `application/json`"

        "422":
          description: "JSON 语法错误"

        "502":
          description: hCaptcha HTTP 请求失败

  "/p/logout":
    post:
      tags:
        - Auth
      summary: 登出
      operationId: logout
      security:
        - CookiesSession: []
      responses:
        "204":
          description: "正常登出"

        "401":
          description: 用户未登录或者 session 已失效

  "/p/me":
    get:
      tags:
        - Auth
      summary: 获取当前用户
      operationId: getCurrentUser
      security:
        - CookiesSession: []
      responses:
        "200":
          description: "返回当前用户"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: 用户未登录或者 session 已失效
  "/p/groups/{group_id}/topics":
    get:
      tags:
        - 小组
        - 讨论
      summary: 分页获取小组讨论列表，按照回复时间倒序分页
      operationId: getGroupTopicsById
      parameters:
        - required: true
          description: 小组ID
          schema:
            title: Group ID
            minimum: 0
            type: integer
          name: group_id
          in: path
        - required: true
          description: 小组 Limit
          schema:
            title: Limit
            maximum: 100
            minimum: 0
            type: integer
            default: 30
          name: limit
          in: query
        - required: true
          description: 小组 Offset
          schema:
            title: Offset
            minimum: 0
            type: integer
            default: 0
          name: offset
          in: query
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Paged_Topic"
        "400":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
  "/p/subjects/{subject_id}/topics":
    get:
      tags:
        - 条目
        - 讨论
      summary: 分页获取条目讨论列表，使用最新回复时间倒序分页
      operationId: getSubjectTopicsById
      parameters:
        - required: true
          description: 条目ID
          schema:
            title: Subject ID
            minimum: 0
            type: integer
          name: subject_id
          in: path
        - required: true
          description: 条目 Limit
          schema:
            title: Limit
            maximum: 100
            minimum: 0
            type: integer
            default: 30
          name: limit
          in: query
        - required: true
          description: 条目 Offset
          schema:
            title: Offset
            minimum: 0
            type: integer
            default: 0
          name: offset
          in: query
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Paged_Topic"
        "400":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
  "/p/subjects/-/topics/{topic_id}":
    get:
      tags:
        - 条目
        - 讨论
      summary: 条目讨论回复列表
      description: 没有分页
      operationId: getSubjectTopicById
      parameters:
        - required: true
          description: 条目讨论ID
          schema:
            title: Topic ID
            minimum: 0
            type: integer
          name: topic_id
          in: path
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PrivateTopicDetail"
        "400":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
  "/p/groups/-/topics/{topic_id}":
    get:
      tags:
        - 小组
        - 讨论
      summary: 获取小组讨论回复列表
      description: 没有分页
      operationId: getGroupTopicById
      parameters:
        - required: true
          description: 小组讨论ID
          schema:
            title: Topic ID
            minimum: 0
            type: integer
          name: topic_id
          in: path
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      group:
                        "$ref": "#/components/schemas/Group"
                  - "$ref": "#/components/schemas/PrivateTopicDetail"
        "400":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"

  "/p/indices/{index_id}/comments":
    get:
      tags:
        - 目录
        - 讨论
      summary: 获取目录讨论列表
      description: 没有分页
      operationId: getIndexCommentsById
      parameters:
        - required: true
          description: 目录ID
          schema:
            title: Index ID
            minimum: 0
            type: integer
          name: index_id
          in: path
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Comments"
        "400":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
  "/p/episodes/{episode_id}/comments":
    get:
      tags:
        - 章节
        - 讨论
      summary: 获取章节讨论列表
      description: 没有分页
      operationId: getEpisodeCommentsById
      parameters:
        - required: true
          description: 章节ID
          schema:
            title: Episode ID
            minimum: 0
            type: integer
          name: episode_id
          in: path
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Comments"
        "400":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
  "/p/characters/{character_id}/comments":
    get:
      tags:
        - 角色
        - 讨论
      summary: 获取角色讨论列表
      description: 没有分页
      operationId: getCharacterCommentsById
      parameters:
        - required: true
          description: 角色ID
          schema:
            title: Character ID
            minimum: 0
            type: integer
          name: character_id
          in: path
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Comments"
        "400":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
  "/p/persons/{person_id}/comments":
    get:
      tags:
        - 人物
        - 讨论
      summary: 获取人物讨论列表
      description: 没有分页
      operationId: getPersonCommentsById
      parameters:
        - required: true
          description: 人物ID
          schema:
            title: Persoon ID
            minimum: 0
            type: integer
          name: person_id
          in: path
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Comments"
        "400":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"

  "/p/groups/{name}":
    get:
      tags:
        - 小组
      summary: 获取小组首页信息
      operationId: getGroupProfileByName
      parameters:
        - name: name
          in: path
          schema:
            type: string
          description: "小组名，类似于 `https://bgm.tv/groups/boring` 的 `boring`"
          required: true
      responses:
        "200":
          description: "返回当前用户"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupProfile"
        "404":
          description: 小组不存在

  "/p/groups/{name}/members":
    get:
      tags:
        - 小组
      summary: 获取小组成员信息
      operationId: listGroupMembersByName
      parameters:
        - name: name
          in: path
          schema:
            type: string
          description: "小组名，类似于 `https://bgm.tv/groups/boring` 的 `boring`"
          required: true
        - name: type
          in: query
          schema:
            type: string
            default: "all"
            enum:
              - mod
              - normal
              - all
          description: 成员类型，默认为 `all`
          required: true
        - $ref: "#/components/parameters/default_query_limit"
        - $ref: "#/components/parameters/default_query_offset"
      responses:
        "200":
          description: "列出用户"
          content:
            application/json:
              schema:
                title: Paged[GroupMember]
                allOf:
                  - $ref: "#/components/schemas/Paged"
                  - type: object
                    properties:
                      data:
                        title: Data
                        type: array
                        items:
                          "$ref": "#/components/schemas/GroupMember"

        "404":
          description: 小组不存在

components:
  parameters:
    default_query_limit:
      required: false
      schema:
        title: Limit
        maximum: 50
        minimum: 1
        type: integer
        default: 30
      name: limit
      description: 分页参数
      in: query

    default_query_offset:
      required: false
      schema:
        title: Offset
        minimum: 0
        type: integer
        default: 0
      description: 分页参数
      name: offset
      in: query

  schemas:
    User:
      $ref: "./components/user.yaml"
    GroupProfile:
      $ref: "./components/private/group_profile.yaml"
    Avatar:
      $ref: "./components/avatar.yaml"
    ErrorDetail:
      $ref: "./components/error_detail.yaml"
    Group:
      type: object
      required:
        - id
        - name
        - created_at
        - title
        - icon
        - total_members
        - description
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date-time
        title:
          type: string
        icon:
          type: string
          format: url
        total_members:
          type: integer
        description:
          type: string
    PrivateTopicDetail:
      $ref: "./components/private/private_topic_detail.yaml"
    Topic:
      $ref: "./components/private/topic.yaml"
    Comment:
      $ref: "./components/private/comment.yaml"
    GroupMember:
      "$ref": "./components/private/group_member.yaml"
    Paged:
      $ref: "./components/page.yaml"
    Paged_Topic:
      title: Paged[Topic]
      allOf:
        - $ref: "#/components/schemas/Paged"
        - type: object
          properties:
            data:
              title: Data
              type: array
              items:
                "$ref": "#/components/schemas/Topic"
    Comments:
      title: Comments
      type: object
      required:
        - comments
      properties:
        comments:
          type: array
          items:
            "$ref": "#/components/schemas/Comment"
  securitySchemes:
    CookiesSession:
      name: sessionID
      type: apiKey
      in: cookie
