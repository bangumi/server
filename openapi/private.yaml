openapi: 3.0.2
info:
  title: "Bangumi Private API"
  version: ""
  description: "`next.bgm.tv` 域名不支持跨域"

# 构建脚本会添加 servers
#servers:
#  - url: https://next.bgm.tv
#    description: Production server
#  - url: https://dev.bgm38.com/
#    description: 开发用服务器

tags:
  - name: Auth

paths:
  "/p/login":
    post:
      tags:
        - Auth
      summary: 登录
      operationId: login
      description: |
        `cf-turnstile-response` 是 cloudflare turnstile 的验证码。

        bgm.tv 的 site key 是 `0x4AAAAAAABkMYinukE8nzYS`

        其他域名的 site key 都是测试用 key `1x00000000000000000000AA`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - cf-turnstile-response
              properties:
                email:
                  type: string
                password:
                  type: string
                cf-turnstile-response:
                  type: string
      responses:
        "200":
          description: "账号密码正确，设置 Cookies"
          headers:
            Set-Cookie:
              description: 设置 cookies session
              schema:
                type: string
                example: sessionID=abcde12345; Path=/; HttpOnly
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User"

        "400":
          description: 请求错误或者验证码错误
          content:
            application/json:
              example:
                "title": "Bad Request"
                "details":
                  - "Email为必填字段"
                  - "Password为必填字段"
                  - "HCaptchaResponse为必填字段"
                "description": "can't validate request body"
              schema:
                title: ErrorDetail
                required:
                  - title
                  - description
                  - details
                type: object
                properties:
                  title:
                    title: Title
                    type: string
                  description:
                    title: Description
                    type: string
                  details:
                    title: Detail
                    type: array
                    items:
                      type: string

        "401":
          description: 账号或密码错误
          content:
            application/json:
              schema:
                title: ErrorDetail
                required:
                  - title
                  - description
                  - details
                type: object
                properties:
                  title:
                    title: Title
                    type: string
                  description:
                    title: Description
                    type: string
                  details:
                    title: Detail
                    type: object
                    required:
                      - remain
                    properties:
                      "remain":
                        type: integer
                        description: 剩余可用登录次数。

        "415":
          description: "content-type 不是 `application/json`"

        "422":
          description: "JSON 语法错误"

        "429":
          description: "登录失败次数太多"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"

        "502":
          description: hCaptcha HTTP 请求失败

  "/p/logout":
    post:
      tags:
        - Auth
      summary: 登出
      operationId: logout
      security:
        - CookiesSession: []
      responses:
        "204":
          description: "正常登出"

        "401":
          description: 用户未登录或者 session 已失效

  "/p/me":
    get:
      tags:
        - Auth
      summary: 获取当前用户
      operationId: getCurrentUser
      security:
        - CookiesSession: []
      responses:
        "200":
          description: "返回当前用户"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: 用户未登录或者 session 已失效
  "/p/groups/{name}/topics":
    get:
      tags:
        - 小组
        - 讨论
      summary: 分页获取小组讨论列表，按照回复时间倒序分页
      operationId: getGroupTopicsByGroupName
      parameters:
        - required: true
          description: 小组名称
          schema:
            type: string
          name: name
          in: path
        - $ref: "#/components/parameters/default_query_limit"
        - $ref: "#/components/parameters/default_query_offset"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Paged_Topic"
        "400":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
  "/p/subjects/{subject_id}/topics":
    get:
      tags:
        - 条目
        - 讨论
      summary: 分页获取条目讨论列表，使用最新回复时间倒序分页
      operationId: getSubjectTopicsById
      parameters:
        - required: true
          description: 条目ID
          schema:
            title: Subject ID
            minimum: 0
            type: integer
          name: subject_id
          in: path
        - required: true
          description: 条目 Limit
          schema:
            title: Limit
            maximum: 100
            minimum: 0
            type: integer
            default: 30
          name: limit
          in: query
        - required: true
          description: 条目 Offset
          schema:
            title: Offset
            minimum: 0
            type: integer
            default: 0
          name: offset
          in: query
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Paged_Topic"
        "400":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
  "/p/subjects/-/topics/{topic_id}":
    get:
      tags:
        - 条目
        - 讨论
      summary: 条目讨论回复列表
      description: 没有分页
      operationId: getSubjectTopicById
      parameters:
        - required: true
          description: 条目讨论ID
          schema:
            title: Topic ID
            minimum: 0
            type: integer
          name: topic_id
          in: path
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PrivateTopicDetail"
        "400":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
  "/p/groups/-/topics/{topic_id}":
    get:
      tags:
        - 小组
        - 讨论
      summary: 获取小组讨论回复列表
      description: 没有分页
      operationId: getGroupTopicById
      parameters:
        - required: true
          description: 小组讨论ID
          schema:
            title: Topic ID
            minimum: 0
            type: integer
          name: topic_id
          in: path
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      group:
                        "$ref": "#/components/schemas/Group"
                  - "$ref": "#/components/schemas/PrivateTopicDetail"
        "400":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"

  "/p/indices/{index_id}/comments":
    get:
      tags:
        - 目录
        - 讨论
      summary: 获取目录讨论列表
      description: 没有分页
      operationId: getIndexCommentsById
      parameters:
        - required: true
          description: 目录ID
          schema:
            title: Index ID
            minimum: 0
            type: integer
          name: index_id
          in: path
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Comments"
        "400":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
  "/p/episodes/{episode_id}/comments":
    get:
      tags:
        - 章节
        - 讨论
      summary: 获取章节讨论列表
      description: 没有分页
      operationId: getEpisodeCommentsById
      parameters:
        - required: true
          description: 章节ID
          schema:
            title: Episode ID
            minimum: 0
            type: integer
          name: episode_id
          in: path
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Comments"
        "400":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
  "/p/characters/{character_id}/comments":
    get:
      tags:
        - 角色
        - 讨论
      summary: 获取角色讨论列表
      description: 没有分页
      operationId: getCharacterCommentsById
      parameters:
        - required: true
          description: 角色ID
          schema:
            title: Character ID
            minimum: 0
            type: integer
          name: character_id
          in: path
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Comments"
        "400":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
  "/p/persons/{person_id}/comments":
    get:
      tags:
        - 人物
        - 讨论
      summary: 获取人物讨论列表
      description: 没有分页
      operationId: getPersonCommentsById
      parameters:
        - required: true
          description: 人物ID
          schema:
            title: Persoon ID
            minimum: 0
            type: integer
          name: person_id
          in: path
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Comments"
        "400":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorDetail"

  "/p/groups/{name}":
    get:
      tags:
        - 小组
      summary: 获取小组首页信息
      operationId: getGroupProfileByName
      parameters:
        - name: name
          in: path
          schema:
            type: string
          description: "小组名，类似于 `https://bgm.tv/groups/boring` 的 `boring`"
          required: true
      responses:
        "200":
          description: "返回当前用户"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupProfile"
        "404":
          description: 小组不存在

  "/p/groups/{name}/members":
    get:
      tags:
        - 小组
      summary: 获取小组成员信息
      operationId: listGroupMembersByName
      parameters:
        - name: name
          in: path
          schema:
            type: string
          description: "小组名，类似于 `https://bgm.tv/groups/boring` 的 `boring`"
          required: true
        - name: type
          in: query
          schema:
            type: string
            default: "all"
            enum:
              - mod
              - normal
              - all
          description: 成员类型，默认为 `all`
          required: true
        - $ref: "#/components/parameters/default_query_limit"
        - $ref: "#/components/parameters/default_query_offset"
      responses:
        "200":
          description: "列出用户"
          content:
            application/json:
              schema:
                title: Paged[GroupMember]
                allOf:
                  - $ref: "#/components/schemas/Paged"
                  - type: object
                    required:
                      - data
                    properties:
                      data:
                        title: Data
                        type: array
                        items:
                          "$ref": "#/components/schemas/GroupMember"

        "404":
          description: 小组不存在

  "/p/pms/list":
    get:
      tags:
        - 私信
      summary: List Private Messages
      operationId: ListPrivateMessages
      parameters:
        - required: true
          name: folder
          description: 私信收/发信箱
          schema:
            enum:
              - inbox
              - outbox
            type: string
          in: query
        - $ref: "#/components/parameters/default_query_limit"
        - $ref: "#/components/parameters/default_query_offset"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Paged_PrivateMessage"
        "400":
          "$ref": "#/components/responses/400"
      security:
        - CookiesSession: []
  "/p/pms/related-msgs/{pm_id}":
    get:
      tags:
        - 私信
      summary: Get related messages of a message
      operationId: GetRelatedPrivateMessages
      parameters:
        - $ref: "#/components/parameters/path_pm_id"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PrivateMessage"
        "404":
          "$ref": "#/components/responses/404"
        "400":
          "$ref": "#/components/responses/400"
      security:
        - CookiesSession: []
  "/p/pms/counts":
    get:
      tags:
        - 私信
      summary: Count private message by types
      operationId: CountPrivateMessageByTypes
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - unread
                  - inbox
                  - outbox
                properties:
                  unread:
                    type: integer
                    description: 未读数
                    minimum: 0
                  inbox:
                    type: integer
                    description: 收信数
                    minimum: 0
                  outbox:
                    type: integer
                    description: 发信数
                    minimum: 0
      security:
        - CookiesSession: []
  "/p/pms/contacts/recent":
    get:
      tags:
        - 私信
      summary: Get 15 users most recently sent messages to
      operationId: GetRecentContacts
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/User"
                maxItems: 15
      security:
        - CookiesSession: []
  "/p/pms/read":
    patch:
      tags:
        - 私信
      summary: mark a private message read
      operationId: MarkPrivateMessageRead
      requestBody:
        content:
          "application/json":
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: integer
                  minimum: 1
      responses:
        "204":
          "$ref": "#/components/responses/200-no-content"
        "400":
          "$ref": "#/components/responses/400"
      security:
        - CookiesSession: []
  "/p/pms":
    post:
      tags:
        - 私信
      summary: create private messages
      operationId: CreatePrivateMessages
      requestBody:
        content:
          "application/json":
            schema:
              type: object
              required:
                - title
                - content
                - receiver_ids
              allOf:
                - type: object
                  properties:
                    title:
                      type: string
                      minLength: 0
                      maxLength: 100
                    content:
                      type: string
                      minLength: 0
                      maxLength: 1000
                - oneOf:
                    - type: object
                      properties:
                        related_id:
                          type: integer
                          description: 关联会话的首条
                          minimum: 1
                        receiver_ids:
                          type: array
                          description: 收信人id列表
                          minItems: 1
                          maxItems: 1
                          items:
                            type: integer
                            minimum: 1
                    - type: object
                      properties:
                        receiver_ids:
                          type: array
                          description: 收信人id列表
                          minItems: 1
                          items:
                            type: integer
                            minimum: 1
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PrivateMessage"
        "400":
          "$ref": "#/components/responses/400"
      security:
        - CookiesSession: []
    delete:
      tags:
        - 私信
      summary: delete private messages
      operationId: DeletePrivateMessages
      requestBody:
        content:
          "application/json":
            schema:
              type: object
              required:
                - ids
              properties:
                ids:
                  type: array
                  description: 私信id列表
                  minItems: 1
                  items:
                    type: integer
                    minimum: 1
      responses:
        "204":
          "$ref": "#/components/responses/200-no-content"
        "400":
          "$ref": "#/components/responses/400"
      security:
        - CookiesSession: []
  "/p/notifications/count":
    get:
      tags:
        - 通知
      summary: Count notifications
      operationId: CountNotifications
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: integer
                minimum: 0
      security:
        - CookiesSession: []

components:
  parameters:
    default_query_limit:
      required: false
      schema:
        title: Limit
        maximum: 50
        minimum: 1
        type: integer
        default: 30
      name: limit
      description: 分页参数
      in: query

    default_query_offset:
      required: false
      schema:
        title: Offset
        minimum: 0
        type: integer
        default: 0
      description: 分页参数
      name: offset
      in: query

    path_pm_id:
      required: true
      description: "私信 ID"
      schema:
        title: Private Message ID
        minimum: 1
        type: integer
      name: pm_id
      in: path

  schemas:
    User:
      $ref: "./components/user.yaml"
    GroupProfile:
      $ref: "./components/private/group_profile.yaml"
    Avatar:
      $ref: "./components/avatar.yaml"
    ErrorDetail:
      $ref: "./components/error_detail.yaml"
    Group:
      type: object
      required:
        - id
        - name
        - created_at
        - title
        - icon
        - total_members
        - description
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date-time
        title:
          type: string
        icon:
          type: string
          format: url
        total_members:
          type: integer
        description:
          type: string
    PrivateTopicDetail:
      $ref: "./components/private/private_topic_detail.yaml"
    Topic:
      $ref: "./components/private/topic.yaml"
    Comment:
      $ref: "./components/private/comment.yaml"
    GroupMember:
      "$ref": "./components/private/group_member.yaml"
    Paged:
      $ref: "./components/page.yaml"
    Paged_Topic:
      title: Paged[Topic]
      allOf:
        - $ref: "#/components/schemas/Paged"
        - type: object
          required:
            - data
          properties:
            data:
              title: Data
              type: array
              items:
                "$ref": "#/components/schemas/Topic"
    Comments:
      title: Comments
      type: object
      required:
        - comments
      properties:
        comments:
          type: array
          items:
            "$ref": "#/components/schemas/Comment"
    PrivateMessage:
      $ref: "./components/private_message.yaml"
    Paged_PrivateMessage:
      title: Paged[PrivateMessage]
      type: object
      properties:
        total:
          title: Total
          type: integer
          default: 0
        limit:
          title: Limit
          type: integer
          default: 0
        offset:
          title: Offset
          type: integer
          default: 0
        data:
          title: Data
          type: array
          items:
            $ref: "#/components/schemas/PrivateMessage"
          default: []

  securitySchemes:
    CookiesSession:
      name: sessionID
      type: apiKey
      in: cookie
  responses:
    200-no-content:
      description: Successful Response
    400:
      description: Bad Request
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ErrorDetail"
    401:
      description: Unauthorized
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ErrorDetail"
    404:
      description: Not Found
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ErrorDetail"
